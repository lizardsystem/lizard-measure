[buildout]
index = http://packages.lizardsystem.nl
find-links = http://packages.lizardsystem.nl/coverage-3.4a1.tar.gz
unzip = true
extends = http://packages.lizardsystem.nl/kgs/latest.cfg
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    django
    mkdir
    omelette
    console_scripts
    pyflakes
    pylint
    sphinx
develop = .
eggs =
    lizard-measure


auto-checkout =

[versions]
lizard-esf =
dbfpy = 2.2.5
django-load = 1.0.0
django-registration = 0.8
lizard-api = 0.11.1
lizard-area = 0.9.3
lizard-esf = 0.26.2
lizard-fewsnorm = 0.22.1
lizard-geo = 0.3
lizard-graph = 0.24.2
lizard-history = 0.4.1
lizard-layers = 0.9.2
lizard-portal = 0.61.6
lizard-registration = 0.4.1
lizard-ui = 4.8
lizard-workspace = 0.19.1
logilab-astng = 0.24.0
logilab-common = 0.58.1
lizard-map = 3.5.2
lxml = 2.3.5
mock = 0.8.0
nens-graph = 0.13
nose = 1.2.1
pylint = 0.25.2
python-dateutil = 1.5
suds = 0.4

[sources]
lizard-security = git git@github.com:lizardsystem/lizard-security.git

[mkdir]
recipe = z3c.recipe.mkdir
paths =
      ${buildout:directory}/var/static
      ${buildout:directory}/var/media
      ${buildout:directory}/var/log

[sysegg]
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    PIL
    matplotlib
    pyproj
    psycopg2


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_measure
projectegg = lizard_measure
settings = testsettings
test = lizard_measure
eggs = ${buildout:eggs}


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    eazysvn
    coverage > 3.3.1
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[pylint]
recipe = zc.recipe.egg
eggs =
     ${buildout:eggs}
     pylint
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]

[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
